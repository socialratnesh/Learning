
*****************************
Create Environment
Allocate Habndle and data Structures
Connect to server and begin Session
Issue SQL and Process Data
Disconnect
Free Handle and Data Structures
*****************************

*****************************						
Connect						
*****************************

cmd_check_connection	-> testClient(conn_string, user, pw,version,instance);
testClient				-> Connect(p,chk,NULL)
Connect					->	rc = OCIEnvCreate((OCIEnv **) &(p->pconn->envhp),
											   (ub4)OCI_THREADED|OCI_OBJECT, (dvoid *)0,
												(dvoid * (*)(dvoid *, size_t)) 0,
											   (dvoid * (*)(dvoid *, dvoid *, size_t))0,
											   (void (*)(dvoid *, dvoid *)) 0,
											   (size_t) 0, (dvoid **) 0 )

OCIHandleAlloc( (dvoid *) p->pconn->envhp, (dvoid **) &(p->pconn->errhp), OCI_HTYPE_ERROR, (size_t) 0, (dvoid **) 0)

similarly for				
OCI_HTYPE_SERVER
OCI_HTYPE_SVCCTX


OCIServerAttach( p->pconn->srvhp, p->pconn->errhp, (OraText *)p->pconn->address, strlen((char *)p->pconn->address), 0)

OCIAttrSet( (dvoid *) p->pconn->svchp, OCI_HTYPE_SVCCTX, (dvoid *)p->pconn->srvhp, (ub4) 0, OCI_ATTR_SERVER, (OCIError *) p->pconn->errhp)

OCISessionBegin ( p->pconn->svchp, p->pconn->errhp, p->pconn->authp, OCI_CRED_RDBMS, (ub4) nMode/*OCI_DEFAULT*/)

*****************************						
Run Query
*****************************						

OCIHandleAlloc( (dvoid *) p->pconn->envhp, (dvoid **) &stmthp, OCI_HTYPE_STMT, (size_t) 0, (dvoid **) 0)

/* Executing query. */
(OCIStmtPrepare(stmthp, p->pconn->errhp, qdef->QStr, (ub4) strlen((char *) qdef->QStr), (ub4) OCI_NTV_SYNTAX, (ub4) OCI_DEFAULT))

/* set attribute for prefetch */
OCIAttrSet( (dvoid *) stmthp, OCI_HTYPE_STMT, &prefetch, (ub4) 0, OCI_ATTR_PREFETCH_ROWS, p->pconn->errhp)

/* execute statement */
OCIStmtExecute (p->pconn->svchp, stmthp, p->pconn->errhp, (ub4)0,(ub4)0, (OCISnapshot *)0, (OCISnapshot *)0, OCI_DEFAULT )

/* get select list attributes */
/* Get the number of columns in the query */
OCIAttrGet(stmthp, OCI_HTYPE_STMT, &numcols, 0, OCI_ATTR_PARAM_COUNT, p->pconn->errhp)

/* get attributes for all columns */
OCIParamGet(stmthp, OCI_HTYPE_STMT, p->pconn->errhp, &colhd, i)


/* get name of column i */
OCIAttrGet(colhd, OCI_DTYPE_PARAM, (dvoid *) &ostr, (ub4 *) &osize, OCI_ATTR_NAME, p->pconn->errhp)

/* get data-type of column i */
OCIAttrGet(colhd, OCI_DTYPE_PARAM, &pColdesc[i-1].dtype, 0, OCI_ATTR_DATA_TYPE, p->pconn->errhp)


/* get data-length of column i */
OCIAttrGet(colhd, OCI_DTYPE_PARAM, &pColdesc[i-1].dsize, 0, OCI_ATTR_DATA_SIZE, p->pconn->errhp)

/* allocate space for the result and define output variables */
DefineByPos(stmthp, &pColdesc[i-1], i, p, c, query_start)


/* Fetch and write results to PDS */
OCIStmtFetch(stmthp,p->pconn->errhp,1,OCI_FETCH_NEXT,OCI_DEFAULT)


*****************************						
Disconnect						
*****************************

OCISessionEnd(p->pconn->svchp, p->pconn->errhp, p->pconn->authp, (ub4) 0)				
	
OCIServerDetach(p->pconn->srvhp, p->pconn->errhp, (ub4) OCI_DEFAULT)


